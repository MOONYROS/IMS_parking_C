bool parkCar(t_car* car) {
    int skipChance = 20; // Šance v procentech, že auto přeskočí řádek

    for (int i = 0; i < ROWS; i++) {
        if (randomBetween(0, 99) < skipChance && i < ROWS - 1) {
            continue; // Přeskočení tohoto řádku s danou pravděpodobností
        }

        int closestDistanceInRow = COLUMNS + 1;
        int targetCol = -1;

        for (int j = 0; j < COLUMNS; j++) {
            if (spots[i][j] == false) {
                int distance = abs(j - ENTRY_COL);
                if (distance < closestDistanceInRow) {
                    closestDistanceInRow = distance;
                    targetCol = j;
                }
            }
        }

        if (targetCol != -1) {
            spots[i][targetCol] = true;
            car->row = i;
            car->col = targetCol;
            car->parked = true;
            parkedCars++;
            return true;
        }
    }
    return false;
}